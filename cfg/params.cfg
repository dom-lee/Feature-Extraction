#!/usr/bin/env python
PACKAGE = "feature_extraction"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Parameters for filtering raw Point Cloud
gen.add("height_threshold", double_t, 0, "simple height threshold for choosing PointCloud to use",
1.3, 0.0, 100.0)

# Parameters for Grid
gen.add("grid_length", double_t, 0, "size of each grid [m]", 0.5, 0.1, 5)
gen.add("grid_range",  int_t,    0, "number of grid at half side", 100, 1, 300)

# Parameters for Base Plane Estimation
gen.add("ring_to_fit_base",   int_t,    0, "number of rings to estimate base plane",
5, 3, 32)
gen.add("gradient_threshold", double_t, 0, "threshold for gradient",
0.2, 0, 10)
gen.add("base_fit_threshold", double_t, 0, "threshold for RANSAC [m]",
0.03, 0.0, 1.0)

# Parameters for Fitting Lines
gen.add("azimuth_resolution", double_t, 0, "azimuth resolution of PointCloud",
0.04, 0.0, 1.0)
gen.add("discontinuity",      double_t, 0, "threshold for discontinuity",
1.3, 1.0, 30.0)
gen.add("epsilon",            double_t, 0, "epsilon for Douglas-Peucker Algorithm",
0.05, 0.0, 10.0)

# Parameters for Filtering Gound Lines
gen.add("ground_dist_threshold",  double_t, 0, "distance threshold for filtering ground [m]",
0.2, 0.0, 10.0)
gen.add("ground_angle_threshold", double_t, 0, "angluar threshold for filtering ground [rad]",
0.5, 0.0, 1.57)


# Parameters for Wall Extraction
gen.add("interpolation_length",    double_t, 0, "length for interpolation[m]",
0.5, 0.01, 5.0)
gen.add("wall_height_threshold",   double_t, 0, "threshold for wall [m]",
0.3, 0.0, 5.0)
gen.add("wall_fit_threshold",      double_t, 0, "threshold for RANSAC [m]",
0.01, 0.0, 1.0)
gen.add("cluster_angle_threshold", double_t, 0, "angluar threshold for clustering [rad]",
0.1, 0.0, 3.14)
gen.add("cluster_dist_threshold",  double_t, 0, "distance threshold for clustering [m]",
0.1, 0.0, 1.0)


gen.add("section_number",        int_t, 0, "number of angular section",
360, 90, 3600)

# Parameters for Glass Detection
gen.add("glass_intensity",       int_t, 0, "intensity threshold for glass",       200, 1, 255)
gen.add("glass_intensity_delta", int_t, 0, "intensity delta threshold for glass", 70, 1, 255)


# Parameters for Ground Extraction
gen.add("discontinuity_height",  double_t, 0, "discontinuity threshold in the cell [m]",
1.5, 0.0, 10.0)
gen.add("obstacle_threshold",    double_t, 0, "height threshold for obstacle [m]",
0.3, 0.01, 3.0)

# Parameters for Curb Extraction
gen.add("discontinuity_azimuth",  double_t, 0, "angular threshold for discontinuity [rad]",
0.03, 0.0, 1.0)
gen.add("curb_height_threshold",  double_t, 0, "height threshold for curb [m]",
0.05, 0.0, 1.0)
gen.add("curb_angle_threshold",   double_t, 0, "angluar threshold for curb [rad]",
2.0, 0.0, 3.14)
gen.add("sidewalk_min_length",    double_t, 0, "min_distance threshold for sidewalk [m]",
1.2, 0.0, 10.0)
gen.add("sidewalk_max_length",    double_t, 0, "max_distance threshold for sidewalk [m]",
3.0, 0.0, 10.0)

# Parameters for Road Modeling
gen.add("beam_section_number",    int_t,    0, "number of beam section for road modeling",
180, 90, 360)
gen.add("road_view_range",        double_t, 0, "max distance for analyze road model [m]",
40, 10, 100)
gen.add("road_width_threshold",   double_t, 0, "threshold of road width for road modeling[m]",
6, 1, 100)
gen.add("ground_count_threshold", int_t,    0, "threshold of ground number for road",
20, 1, 100)

# Parameters for Debug
gen.add("ring_to_analyze",        int_t,    0, "number of rings to analyze",
5, 1, 32)

exit(gen.generate(PACKAGE, "feature_extraction", "feature_extraction"))

