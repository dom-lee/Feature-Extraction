#!/usr/bin/env python
PACKAGE = "feature_extraction"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("ring_to_analyze",       int_t,    0, "number of rings to analyze",              26,    1, 32)
gen.add("ring_to_fit_base",      int_t,    0, "number of rings to estimate base plane",  5,     1, 32)
gen.add("fit_plane_threshold",   double_t, 0, "threshold for RANSAC",                    0.1,   0, 1.0)
gen.add("local_window_size",     int_t,    0, "window size for variance check",          6,     0, 30)
gen.add("alignedness_threshold", double_t, 0, "flat surface extraction",                 0.99,  0, 1.0)
gen.add("angle_buffer",          double_t, 0, "angle buffer for obstacle filter[rad]",   0.2,   0, 0.5)
gen.add("dist_diff_threshold",   double_t, 0, "threshold for obstacle filter[m]",        0.1,   0, 10)
gen.add("angle_diff_threshold",  double_t, 0, "threshold for multi planar models [rad]", 0.1,   0, 1.5)
gen.add("height_diff_threshold", double_t, 0, "threshold for multi planar models [m]",   1.0,   0, 10)
gen.add("ground_threshold",      double_t, 0, "threshold for filter ground",             0.3,   0, 10)
gen.add("angular_resolution",    double_t, 0, "angular resolution of velodyne [rad]",    0.005, 0, 1)
gen.add("ground_discontinuity",  double_t, 0, "discontinuity multiplication for ground", 30,    0, 100)
gen.add("continued_number",      int_t,    0, "minmum number of continued for ground",   40,    0, 100)
gen.add("curb_height",           double_t, 0, "height of curb [m]",                      0.2,   0, 10)
gen.add("discontinuity",         double_t, 0, "discontiuity for extracting curb",        2.0,   0, 10)
gen.add("angle_curb_threshold",  double_t, 0, "angular threshold for curb [rad]",        2.4,   0, 3.14)
gen.add("height_curb_threshold", double_t, 0, "height threshold for curb extraction",    0.1,   0, 1.0)

exit(gen.generate(PACKAGE, "feature_extraction", "feature_extraction"))

